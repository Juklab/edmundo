#BlueJ class context
comment0.target=SWorld
comment0.text=\n\ SWorld\ class\ is\ a\ super-class\ for\ a\ scrolling\ world\ (horizontal,\ vertical,\ scroll-width).<br><br>\n\ Author\:\ Juk<br>Version\:\ 2015<br><br>\n\ <h2\ style\="color\:\ lime;">To\ implement\ this\ super-class\:</h2>\n\ <img\ src\="..\\images\\characters\\player\\troll_dancing.gif">\n\ <l><li>(1)\ create\ a\ sub-class\ of\ this\ class</li>\n\ <li>(2)\ use\ a\ <i>super(....)</i>\ call\ to\ one\ of\ the\ constructors\ in\ this\ class</li>\n\ <li>(3)\ create\ the\ main\ actor\ (one\ that\ always\ stays\ in\ view)\ and\ call\ the\ <i>setMainActor</i>\ method</li>\n\ <li>(4)\ (optional)\ set\ a\ scrolling\ background\ image\ using\ a\ call\ to\ <i>setScrollingBackground</i>\ or\ <i>fillScrollingBackground</i></li></l><br>\n\ NOTE\:\ the\ order\ of\ steps\ above\ is\ very\ important<br><br>\n\ There\ are\ two\ methods\ to\ add\ other\ objects\ into\ the\ world\:\n\ <l><li>the\ standard\ method\ <i>addObject(Actor,\ int,\ int)</i>\ can\ be\ used\ to\ add\ a\ scrollable\ actor\ into\ the\ world</li>\n\ <li>a\ secondary\ method\ <i>addObject(Actor,\ int,\ int,\ boolean)</i>\ which\ is\ equivalent\ to\ the\ standard\ method,\ except\n\ that\ the\ boolean\ will\ indicate\ the\ scrollable\ state\ of\ the\ object.\ \ When\ adding\ scrolling\ objects\ into\ the\ world,\n\ use\ scrolling\ coordinates;\ when\ adding\ non-scrolling\ objects,\ use\ world\ coordinates.</li></l>\n\n\ SPECIAL\ NOTE\:\ if\ you\ decide\ to\ override\ the\ 'act'\ method\ of\ this\ class\ with\ an\ 'act'\ method\ in\ your\ sub-world,\ you\ will\n\ need\ to\ follow\ the\ format\ below\ to\ run\ the\ scrolling\ of\ the\ scenario\:\n\ \n\ <pre>\ \ \ \ \ \ \ \ public\ void\ act()\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ possibly\ some\ code\ here\ \ \ \ \ \ \n\ \ \ \ \ \ \ \ \ \ \ \ super.act();\n\ \ \ \ \ \ \ \ \ \ \ \ //\ possibly\ some\ more\ code\ here\n\ \ \ \ \ \ \ \ }<pre>\n
comment1.params=wide\ high\ cellSize\ scrollWide\ scrollHigh
comment1.target=SWorld(int,\ int,\ int,\ int,\ int)
comment10.params=
comment10.target=void\ act()
comment10.text=\n\ Runs\ the\ scrolling.\n
comment11.params=
comment11.target=void\ scrollBackground()
comment11.text=\n\ Scrolls\ the\ background\ image.\n
comment12.params=
comment12.target=void\ scrollObjects()
comment13.params=worldX
comment13.target=int\ getUnivX(int)
comment14.params=worldY
comment14.target=int\ getUnivY(int)
comment15.params=
comment15.target=int\ getScrollingWidth()
comment16.params=
comment16.target=int\ getScrollingHeight()
comment2.params=wide\ high\ cellSize\ scrollWide
comment2.target=SWorld(int,\ int,\ int,\ int)
comment3.params=main\ xLoc\ yLoc\ xRange\ yRange
comment3.target=void\ addMainActor(greenfoot.Actor,\ int,\ int,\ int,\ int)
comment4.params=scrollingBackground
comment4.target=void\ setScrollingBackground(greenfoot.GreenfootImage)
comment5.params=fillImage
comment5.target=void\ fillScrollingBackground(greenfoot.GreenfootImage)
comment6.params=obj\ xLoc\ yLoc\ scroller
comment6.target=void\ addObject(greenfoot.Actor,\ int,\ int,\ boolean)
comment7.params=obj\ xLoc\ yLoc
comment7.target=void\ addObject(greenfoot.Actor,\ int,\ int)
comment8.params=obj
comment8.target=void\ removeObject(greenfoot.Actor)
comment8.text=\n\ Removes\ an\ object\ from\ the\ world,\ re-defining\ fields\ as\ neccessary\n\n\ @param\ obj\ the\ object\ to\ be\ removed\ from\ the\ world\n
comment9.params=objs
comment9.target=void\ removeObjects(java.util.List)
comment9.text=\n\ Removes\ a\ collection\ of\ objects\ from\ the\ world,\ calling\ <i>removeObject(Actor)</i>\ for\ each\ one\ in\ the\ list\n\n\ @param\ objs\ the\ collection\ or\ list\ of\ objects\ to\ be\ removed\ from\ the\ world\n
numComments=17
